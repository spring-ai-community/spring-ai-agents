name: CI/CD with Integration Tests

on:
  schedule:
    # Daily builds at reasonable intervals
    - cron: '0 9 * * 1-5'    # 9:00 AM UTC weekdays
    - cron: '0 21 * * 1-5'   # 9:00 PM UTC weekdays
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '*.md'
  workflow_dispatch:
    inputs:
      skip_all_tests:
        description: 'Skip all tests (for quick Maven Central publishing)'
        required: false
        default: 'false'
        type: boolean

jobs:
  build-and-publish:
    name: Build, Test, and Publish
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/spring-ai-community/agents-runtime:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user root
    if: ${{ github.repository_owner == 'spring-ai-community' }}
    concurrency:
      group: continuous-integration-${{ github.ref }}
      cancel-in-progress: true
    env:
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for commit validation

      - name: Validate commit messages
        run: |
          echo "Checking commit messages for AI attribution..."

          FOUND_ATTRIBUTION=false

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # For PRs, check commits in the PR
            echo "Checking commits in PR from ${{ github.event.pull_request.base.sha }} to ${{ github.event.pull_request.head.sha }}"
            COMMITS=$(git rev-list ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})

            for commit in $COMMITS; do
              echo "Checking commit: $commit"
              COMMIT_MSG=$(git log --format=%B -n 1 $commit)

              # Check for Claude attribution patterns
              if echo "$COMMIT_MSG" | grep -q "🤖.*Claude Code"; then
                echo "❌ ERROR: Commit $commit contains Claude Code attribution"
                echo "Found: $(echo "$COMMIT_MSG" | grep "🤖.*Claude Code")"
                FOUND_ATTRIBUTION=true
              fi

              if echo "$COMMIT_MSG" | grep -q "Co-Authored-By.*Claude"; then
                echo "❌ ERROR: Commit $commit contains Claude co-authoring"
                echo "Found: $(echo "$COMMIT_MSG" | grep "Co-Authored-By.*Claude")"
                FOUND_ATTRIBUTION=true
              fi
            done
          else
            # For pushes to main, check the last commit
            COMMIT=$(git rev-parse HEAD)
            echo "Checking pushed commit: $COMMIT"
            COMMIT_MSG=$(git log --format=%B -n 1 $COMMIT)

            # Check for Claude attribution patterns
            if echo "$COMMIT_MSG" | grep -q "🤖.*Claude Code"; then
              echo "❌ ERROR: Commit $COMMIT contains Claude Code attribution"
              echo "Found: $(echo "$COMMIT_MSG" | grep "🤖.*Claude Code")"
              FOUND_ATTRIBUTION=true
            fi

            if echo "$COMMIT_MSG" | grep -q "Co-Authored-By.*Claude"; then
              echo "❌ ERROR: Commit $COMMIT contains Claude co-authoring"
              echo "Found: $(echo "$COMMIT_MSG" | grep "Co-Authored-By.*Claude")"
              FOUND_ATTRIBUTION=true
            fi
          fi

          if [ "$FOUND_ATTRIBUTION" = true ]; then
            echo ""
            if [ "${{ github.event_name }}" = "pull_request" ]; then
              echo "🚫 BLOCKING PR MERGE"
              echo "Cannot merge PR with AI attribution in commit messages."
            else
              echo "🚫 BLOCKING SNAPSHOT PUBLICATION"
              echo "Cannot publish snapshots with AI attribution in commit messages."
            fi
            echo ""
            echo "💡 To fix this:"
            echo "1. Use 'git rebase -i' to edit the problematic commit(s)"
            echo "2. Remove the Claude attribution lines from commit messages"
            echo "3. Force push the corrected commits"
            echo ""
            echo "See CLAUDE.md for commit message guidelines."
            exit 1
          else
            echo "✅ All commit messages are clean - proceeding"
          fi

      # Note: JDK, Maven, Node.js, and CLIs are pre-installed in the container image
      # Verify CLIs are available from the container
      - name: Verify container CLI installations
        run: |
          echo "=== Verifying pre-installed CLIs from container ==="
          echo "✅ Claude CLI: $(claude --version 2>&1)"
          echo "✅ Gemini CLI: $(gemini --version 2>&1)"
          echo "✅ Vendir CLI: $(vendir --version 2>&1)"
          echo "✅ Maven: $(mvn --version | head -1)"
          echo "✅ Java: $(java -version 2>&1 | head -1)"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          # Include image tag in cache key to avoid issues when container updates
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}-agents-runtime-latest
          restore-keys: |
            maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}-
            maven-${{ runner.os }}-

      - name: Build and test with Maven
        run: |
          # Temporarily skipping tests to debug Maven Central publishing
          echo "TEMPORARY: Skipping all tests for quick Maven Central publish test"
          ./mvnw --batch-mode --quiet clean install -DskipTests -Dmaven.test.skip=true -Dfailsafe.skip=true
          # TODO: Re-enable tests after Maven Central publishing is verified
          # if [[ "${{ github.event.inputs.skip_all_tests }}" == "true" ]]; then
          #   echo "Skipping all tests - build only for quick publishing"
          #   ./mvnw --batch-mode --quiet clean install -DskipTests -Dmaven.test.skip=true -Dfailsafe.skip=true
          # else
          #   echo "Running full test suite including integration tests"
          #   ./mvnw --batch-mode --quiet clean install -Pfailsafe
          # fi

      - name: Upload test reports
        if: always()  # Upload reports even on failure
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/target/surefire-reports/*.xml
            **/target/failsafe-reports/*.xml
          retention-days: 7

      # Temporarily disabled to debug Maven Central publishing
      # - name: Generate Java docs
      #   if: github.ref == 'refs/heads/main'
      #   run: ./mvnw --batch-mode --quiet javadoc:aggregate

      # - name: Build documentation
      #   if: github.ref == 'refs/heads/main'
      #   run: ./mvnw --quiet clean antora:antora -pl docs

      - name: Publish snapshots to Maven Central
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: |
          echo "Publishing snapshot artifacts to Maven Central..."
          # Standard maven-deploy-plugin will use distributionManagement configuration for snapshots
          # Exclude docs/agents/samples that have maven-deploy-plugin skip=true
          ./mvnw --batch-mode --update-snapshots deploy -DskipTests -Dmaven.test.skip=true -Dfailsafe.skip=true